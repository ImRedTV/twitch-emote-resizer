{"version":3,"sources":["components/Button.js","components/ProgressBar.js","components/DropZone.js","info.svg","github.svg","App.js","reportWebVitals.js","index.js"],"names":["Button","clickHandler","children","className","onClick","ProgressBar","progress","style","width","estimateCanvasFileSize","canvas","Math","round","toDataURL","length","bytesToKilobytes","bytes","toFixed","DropZone","useState","draggingFile","setDraggingFile","setProgress","loadingText","setLoadingText","sourceImageUrl","setSourceImageUrl","fileName","setFileName","fileInputRef","useRef","sourceImageRef","canvasRefs","resized28Ref","push","resized56Ref","resized112Ref","resized18Ref","resized36Ref","resized72Ref","handleSaveImage","canvasRef","current","toBlob","blob","saveAs","onDrop","e","preventDefault","stopPropagation","dataTransfer","files","name","split","URL","createObjectURL","onDragEnter","onDragLeave","onDragOver","src","ref","onLoad","resized","withinSize","pica","Pica","resize","quality","alpha","then","compressionPass","tryCompressionPass","colorsPower","ctx","getContext","resizedPointContainer","iq","PointContainer","fromHTMLCanvasElement","colors","pow","palette","imageData","createImageData","height","data","set","toUint8Array","putImageData","id","type","accept","display","onChange","target","click","cursor","zip","JSZip","file","Object","keys","generateAsync","zipData","App","info","alt","window","location","href","github","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cfce757.chunk.js","sourcesContent":["import './Button.css';\r\n\r\nfunction Button({clickHandler, children}) {\r\n  return (\r\n    <div className=\"Button\" onClick={clickHandler}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import './ProgressBar.css';\r\n\r\nfunction ProgressBar({progress}) {\r\n  return (\r\n    <div className='ProgressBar'>\r\n      <div className='ProgressBarInner' style={{ width: `${progress}%` }}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProgressBar;\r\n","import './DropZone.css';\r\nimport Button from \"./Button\";\r\nimport {useRef, useState} from \"react\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport Pica from 'pica';\r\nimport * as iq from 'image-q';\r\nimport JSZip from \"jszip\";\r\nimport { saveAs } from 'file-saver';\r\n\r\nfunction DropZone() {\r\n  const [draggingFile, setDraggingFile] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [loadingText, setLoadingText] = useState('');\r\n  const [sourceImageUrl, setSourceImageUrl] = useState('');\r\n  const [fileName, setFileName] = useState('');\r\n\r\n  const fileInputRef = useRef(null);\r\n  const sourceImageRef = useRef(null);\r\n\r\n  const canvasRefs = [];\r\n  const resized28Ref = useRef(null);\r\n  canvasRefs.push(resized28Ref);\r\n  const resized56Ref = useRef(null);\r\n  canvasRefs.push(resized56Ref);\r\n  const resized112Ref = useRef(null);\r\n  canvasRefs.push(resized112Ref);\r\n  const resized18Ref = useRef(null);\r\n  canvasRefs.push(resized18Ref);\r\n  const resized36Ref = useRef(null);\r\n  canvasRefs.push(resized36Ref);\r\n  const resized72Ref = useRef(null);\r\n  canvasRefs.push(resized72Ref);\r\n\r\n  const handleChangeFile = e => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (e.target.files[0]) {\r\n      setFileName(e.target.files[0].name.split('.')[0]);\r\n      setSourceImageUrl(URL.createObjectURL(e.target.files[0]));\r\n      setProgress(1);\r\n      setLoadingText('Loading image...');\r\n    }\r\n  };\r\n  const handleClickChooseFile = e => {\r\n    fileInputRef.current.click();\r\n  };\r\n  const handleDragEnter = e => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDraggingFile(true);\r\n  };\r\n  const handleDragLeave = e => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDraggingFile(false);\r\n  };\r\n  const handleDragOver = e => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  };\r\n  const handleDrop = e => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDraggingFile(false);\r\n    if (e.dataTransfer.files[0]) {\r\n      setFileName(e.dataTransfer.files[0].name.split('.')[0]);\r\n      setSourceImageUrl(URL.createObjectURL(e.dataTransfer.files[0]));\r\n      setProgress(1);\r\n      setLoadingText('Loading image...');\r\n    }\r\n  };\r\n  const handleImageLoad = e => {\r\n    let resized = 0;\r\n    let withinSize = 0;\r\n    setProgress(10);\r\n    setLoadingText(`Resizing image... (${resized}/${canvasRefs.length})`);\r\n    const pica = new Pica();\r\n    for (let canvasRef of canvasRefs) {\r\n      pica.resize(sourceImageRef.current, canvasRef.current, {\r\n        quality: 3,\r\n        alpha: true,\r\n      }).then(() => {\r\n        resized += 1;\r\n        setProgress(10 + ((resized / canvasRefs.length) * 70) + ((withinSize / canvasRefs.length) * 20));\r\n        setLoadingText(`Resizing image... (${resized}/${canvasRefs.length})`);\r\n\r\n        let compressionPass = 0;\r\n        let colorsPower = 15\r\n\r\n        function tryCompressionPass(canvasRef, colorsPower) {\r\n          setLoadingText(`Compressing image... (Pass ${++compressionPass})`);\r\n          let ctx = canvasRef.current.getContext('2d');\r\n          let resizedPointContainer = iq.utils.PointContainer.fromHTMLCanvasElement(canvasRef.current);\r\n          iq.buildPalette([resizedPointContainer], { colors: Math.pow(2, colorsPower) }).then(palette => {\r\n            let imageData = ctx.createImageData(canvasRef.current.width, canvasRef.current.height);\r\n            imageData.data.set(iq.applyPaletteSync(resizedPointContainer, palette).toUint8Array());\r\n            ctx.putImageData(imageData, 0, 0);\r\n          }).then(() => {\r\n            if (estimateCanvasFileSize(canvasRef.current) > 25000 && colorsPower > 0) {\r\n              tryCompressionPass(canvasRef, colorsPower - 1);\r\n            }\r\n            else {\r\n              withinSize += 1;\r\n              setProgress(10 + ((resized / canvasRefs.length) * 70) + ((withinSize / canvasRefs.length) * 20));\r\n            }\r\n          });\r\n        }\r\n\r\n        if (estimateCanvasFileSize(canvasRef.current) > 25000) {\r\n          tryCompressionPass(canvasRef, colorsPower);\r\n        }\r\n        else {\r\n          withinSize += 1;\r\n          setProgress(10 + ((resized / canvasRefs.length) * 70) + ((withinSize / canvasRefs.length) * 20));\r\n        }\r\n      });\r\n    }\r\n  };\r\n  const handleSaveAll = e => {\r\n    let zip = new JSZip();\r\n    for (let canvasRef of canvasRefs) {\r\n      canvasRef.current.toBlob(blob => {\r\n        zip.file(`${fileName}@${canvasRef.current.width}.png`, blob);\r\n        if (Object.keys(zip.files).length === canvasRefs.length) {\r\n          zip.generateAsync({ type: 'blob' }).then(zipData => {\r\n            saveAs(zipData, `${fileName}.zip`);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n  const handleSaveImage = canvasRef => {\r\n    canvasRef.current.toBlob(blob => {\r\n      saveAs(blob, `${fileName}@${canvasRef.current.width}.png`);\r\n    });\r\n  };\r\n  return (\r\n    <div className={\r\n      'DropZone' + (draggingFile ? ' Dragging' : '')\r\n      + (progress > 0 && progress < 100 ? ' Loading' : '')\r\n      + (progress === 100 ? ' Done' : '')\r\n    }\r\n         onDrop={handleDrop}\r\n         onDragEnter={handleDragEnter}\r\n         onDragLeave={handleDragLeave}\r\n         onDragOver={handleDragOver}\r\n    >\r\n      <img className=\"SourceImage\" src={sourceImageUrl} ref={sourceImageRef} onLoad={handleImageLoad} />\r\n      <input id=\"ImageInput\"\r\n             type=\"file\"\r\n             accept=\"image/*\"\r\n             ref={fileInputRef}\r\n             style={{display: 'none'}}\r\n             onChange={handleChangeFile}\r\n      />\r\n      <div className=\"DropCallToAction\">\r\n        <h2>Drop your image here or </h2>\r\n        <Button clickHandler={handleClickChooseFile}>Choose file</Button>\r\n      </div>\r\n      <div className=\"LoadingContainer\">\r\n        <h4>{loadingText}</h4>\r\n        <ProgressBar progress={progress} />\r\n      </div>\r\n      <div className=\"ResizedContainer\">\r\n        <div className=\"ResizedRow\">\r\n          <div onClick={() => handleSaveImage(resized112Ref)} style={{ cursor: 'pointer' }}>\r\n            <canvas className=\"ResizedCanvas By112\" width=\"112\" height=\"112\" ref={resized112Ref}/>\r\n            <div className=\"ImageSize\">112x112 ({bytesToKilobytes(estimateCanvasFileSize(resized112Ref.current))}KB)</div>\r\n          </div>\r\n          <div onClick={() => handleSaveImage(resized56Ref)} style={{ cursor: 'pointer' }}>\r\n            <canvas className=\"ResizedCanvas By56\" width=\"56\" height=\"56\" ref={resized56Ref}/>\r\n            <div className=\"ImageSize\">56x56 ({bytesToKilobytes(estimateCanvasFileSize(resized56Ref.current))}KB)</div>\r\n          </div>\r\n          <div onClick={() => handleSaveImage(resized28Ref)} style={{ cursor: 'pointer' }}>\r\n            <canvas className=\"ResizedCanvas By28\" width=\"28\" height=\"28\" ref={resized28Ref}/>\r\n            <div className=\"ImageSize\">28x28 ({bytesToKilobytes(estimateCanvasFileSize(resized28Ref.current))}KB)</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"ResizedRow\">\r\n          <div onClick={() => handleSaveImage(resized72Ref)} style={{ cursor: 'pointer' }}>\r\n            <canvas className=\"ResizedCanvas By72\" width=\"72\" height=\"72\" ref={resized72Ref}/>\r\n            <div className=\"ImageSize\">72x72 ({bytesToKilobytes(estimateCanvasFileSize(resized72Ref.current))}KB)</div>\r\n          </div>\r\n          <div onClick={() => handleSaveImage(resized36Ref)} style={{ cursor: 'pointer' }}>\r\n            <canvas className=\"ResizedCanvas By36\" width=\"36\" height=\"36\" ref={resized36Ref}/>\r\n            <div className=\"ImageSize\">36x36 ({bytesToKilobytes(estimateCanvasFileSize(resized36Ref.current))}KB)</div>\r\n          </div>\r\n          <div onClick={() => handleSaveImage(resized18Ref)} style={{ cursor: 'pointer' }}>\r\n            <canvas className=\"ResizedCanvas By18\" width=\"18\" height=\"18\" ref={resized18Ref}/>\r\n            <div className=\"ImageSize\">18x18 ({bytesToKilobytes(estimateCanvasFileSize(resized18Ref.current))}KB)</div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p>Click an image to save it or</p>\r\n          <Button clickHandler={handleSaveAll}>Save all (.zip)</Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction estimateCanvasFileSize(canvas) {\r\n  if (canvas === null) {\r\n    return 0;\r\n  }\r\n  const imageDataHeader = 'data:image/png;base64,';\r\n  return Math.round((canvas.toDataURL('image/png').length - imageDataHeader.length) * (3/4));\r\n}\r\n\r\nfunction bytesToKilobytes(bytes) {\r\n  return (bytes / 1024).toFixed(2);\r\n}\r\n\r\nexport default DropZone;\r\n","export default __webpack_public_path__ + \"static/media/info.ebce7ea8.svg\";","export default __webpack_public_path__ + \"static/media/github.16a9304e.svg\";","import './App.css';\nimport DropZone from './components/DropZone';\nimport info from './info.svg';\nimport github from './github.svg';\n\nfunction App() {\n  const handleViewOnGithub = () => {\n    window.location.href = \"https://github.com/tma02/twitch-emote-resizer\";\n  };\n  return (\n    <div className=\"App\">\n      <h4>Twitch Emote Resizer</h4>\n      <DropZone />\n      <div className=\"Info\">\n        <img src={info} className=\"InfoIcon\" alt=\"info icon\" />\n        <p>\n          This page will resize an image into the sizes Twitch requires for emotes and badges.\n          <br/>\n          If the resized image is larger than Twitch's size limit of 25KB, this page will also attempt to compress it.\n          <br/>\n          Image processing is done in your browser. Your image never leaves your device.\n        </p>\n      </div>\n      <div className=\"GitHub\" onClick={handleViewOnGithub}>\n        <img src={github} className=\"GitHubIcon\"/>\n        View on GitHub\n      </div>\n      <div className=\"Spacer\"/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}